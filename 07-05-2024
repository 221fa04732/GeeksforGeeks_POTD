vector<int> reverseLevelOrder(Node *root)
{
    vector<int>ans;
    queue<Node*>q;
    q.push(root);
    while(!q.empty())
    {
        vector<int>temp;
        int n=q.size();
        for(int i=0;i<n;i++)
        {
            Node* temp_node=q.front();
            q.pop();
            temp.push_back(temp_node->data);
            if(temp_node->left)
                q.push(temp_node->left);
            if(temp_node->right)
                q.push(temp_node->right);
        }
        while(!temp.empty())
        {
            ans.push_back(temp.back());
            temp.pop_back();
        }
    }
    reverse(ans.begin(),ans.end());
    return ans;
}
